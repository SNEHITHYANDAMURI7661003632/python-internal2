# -*- coding: utf-8 -*-
"""LVADSUSR107-snehit-IA2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NJqHCP07pIysEcLKPj8oFpAmdYuszoPw
"""

#10
import pandas as pd
data={'Department':['Electronics','Electronics','Clothing','Clothing','HomeGoods'],
      'Salesperson':['Alice','bob','charlie','David','eve'],
      'sales':[70000,50000,30000,40000,60000]}
df=pd.DataFrame(data)
df['sales']=pd.to_numeric(df['sales'])

average_result=df.groupby('Department')['sales'].mean()
print(average_result)

#9
import pandas as pd
employee_data={'employee':['Alice','bob','charlie','David'],'department':['HR','IT','FINANCE','IT'],'manager':['jhon','rachel','emily','rachel']}
project_data={'employee':['Alice','charlie','eve'],'project':['p1','p2','p3']}

df=pd.DataFrame(employee_data)
df1=pd.DataFrame(project_data)
a=pd.merge(df,df1,on=['employee'],how='outer')
print(a)

#8
import pandas as pd
employee_data={'product':['Apples','bananas','cherries','Dates','elderberries','flour','Grapes'],
               'category':['fruit','fruit','fruit','fruit','fruit','bakery','fruit'],'price':[1.20,0.50,3.00,2.50,4.00,1.50,2.00],
               'promotion':[True,False,True,True,False,True,False]}
df=pd.DataFrame(employee_data)

a=df.groupby('category')['price'].mean()
print(a)
grouped=df.loc[((df['category']=='fruit')& (df['price']>2.2)) | ((df['category']=='bakery')&(df['price']>1.5))]
print(grouped)

#7
import pandas as pd

data = {
    'Name': ['Alice', 'Bob', 'Charlie','David','eve','Frank','Grace'],
    'Age': [25,30,35,40,45,50,55],
    'City': ['New York', 'Los Angeles', 'Chicago','huston','phenoix','miami','boston'],
    'department':['HR','IT','FINANCE','MARKETING','SALES','IT','HR']}
df=pd.DataFrame(data)
#print(df)
grouped=df[(df['Age']<45) & (df['department']!='HR')]
print(grouped)

#2

import numpy as np

def normalize_data(data):
    means = np.mean(data)
    stds = np.std(data)

    normalized_data = (data - means) / stds

    return normalized_data
a = [[140,135,160],[65,49,72],[25,30,35]]
b=np.array(a)
normalize_data(b)



